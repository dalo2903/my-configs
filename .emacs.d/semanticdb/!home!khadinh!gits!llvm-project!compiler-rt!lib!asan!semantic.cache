;; Object semanticdb-project-database-file-1585ebeb1238
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1585ebeb1238"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1585ebe34736"
      :major-mode c++-mode
      :tags 
        '( ("asan_allocator.h" include nil nil [641 668])
            ("asan_descriptions.h" include nil nil [669 699])
            ("asan_flags.h" include nil nil [700 723])
            ("asan_internal.h" include nil nil [724 750])
            ("asan_mapping.h" include nil nil [751 776])
            ("asan_report.h" include nil nil [777 801])
            ("asan_thread.h" include nil nil [802 826])
            ("unnamed" type
               (:members 
                  ( ("__asan" using (:type ("__asan" type
                         (:prototype t
                          :type "namespace")
                          nil nil)) (reparse-symbol namespacesubparts) [840 863])
                    ("FindInfoForStackVar" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [897 907])
                            ("frame_descr" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [908 932])
                            ("offset" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [933 945])
                            ("name" variable
                               (:pointer 1
                                :type "char")
                                (reparse-symbol arg-sub-list) [978 989])
                            ("name_size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [990 1005])
                            ("region_address" variable
                               (:pointer 1
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1038 1059])
                            ("region_size" variable
                               (:pointer 1
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1060 1078]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [865 1741])
                    ("AsanGetStack" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1761 1771])
                            ("trace" variable
                               (:pointer 1
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1772 1784])
                            ("size" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1785 1794])
                            ("thread_id" variable
                               (:pointer 1
                                :type ("u32" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1795 1810])
                            ("alloc_stack" variable (:type "bool") (reparse-symbol arg-sub-list) [1836 1853]))                          
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1743 2504]))                  
                :type "namespace")
                nil [828 2507])
            ("__asan_locate_address" function
               (:pointer 1
                :constant-flag t
                :arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2587 2597])
                    ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [2598 2609])
                    ("name_size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2610 2625])
                    ("region_address_ptr" variable
                       (:pointer 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2660 2685])
                    ("region_size_ptr" variable
                       (:pointer 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2720 2742]))                  
                :type "char")
                nil [2553 4210])
            ("__asan_get_alloc_stack" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4270 4280])
                    ("trace" variable
                       (:pointer 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4281 4293])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4294 4304])
                    ("thread_id" variable
                       (:pointer 1
                        :type ("u32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4305 4320]))                  
                :type ("uptr" type (:type "class") nil nil))
                nil [4242 4401])
            ("__asan_get_free_stack" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4460 4470])
                    ("trace" variable
                       (:pointer 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4471 4483])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4484 4494])
                    ("thread_id" variable
                       (:pointer 1
                        :type ("u32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4495 4510]))                  
                :type ("uptr" type (:type "class") nil nil))
                nil [4433 4592])
            ("__asan_get_shadow_mapping" function
               (:arguments 
                  ( ("shadow_scale" variable
                       (:pointer 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4655 4674])
                    ("shadow_offset" variable
                       (:pointer 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4675 4695]))                  
                :type "void")
                nil [4624 4810]))          
      :file "asan_debugging.cpp"
      :pointmax 4811
      :fsize 4810
      :lastmodtime '(24391 25612 223943 495000)
      :unmatched-syntax '((symbol 4594 . 4623) (symbol 4403 . 4432) (symbol 4212 . 4241) (symbol 2523 . 2552)))
    (semanticdb-table "semanticdb-table-1585ebe34756"
      :major-mode c++-mode
      :tags 
        '( ("ASAN_ALLOCATOR_H" variable (:constant-flag t) nil [609 625])
            ("asan_flags.h" include nil nil [627 650])
            ("asan_internal.h" include nil nil [651 677])
            ("asan_interceptors.h" include nil nil [678 708])
            ("sanitizer_common/sanitizer_allocator.h" include nil nil [709 758])
            ("sanitizer_common/sanitizer_list.h" include nil nil [759 803])
            ("__asan" type
               (:members 
                  ( ("AllocType" type
                       (:members 
                          ( ("FROM_MALLOC" variable
                               (:constant-flag t
                                :default-value (858 859)
                                :type "int")
                                (reparse-symbol enumsubparts) [844 859])
                            ("FROM_NEW" variable
                               (:constant-flag t
                                :default-value (931 932)
                                :type "int")
                                (reparse-symbol enumsubparts) [920 932])
                            ("FROM_NEW_BR" variable
                               (:constant-flag t
                                :default-value (994 995)
                                :type "int")
                                (reparse-symbol enumsubparts) [980 995]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [825 1043])
                    ("AsanChunk" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1045 1062])
                    ("AllocatorOptions" type
                       (:members 
                          ( ("quarantine_size_mb" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1092 1115])
                            ("thread_local_quarantine_size_kb" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1118 1154])
                            ("min_redzone" variable (:type ("u16" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1157 1173])
                            ("max_redzone" variable (:type ("u16" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1176 1192])
                            ("may_return_null" variable (:type ("u8" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1195 1214])
                            ("alloc_dealloc_mismatch" variable (:type ("u8" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1217 1243])
                            ("release_to_os_interval_ms" variable (:type ("s32" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1246 1276])
                            ("SetFrom" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("f" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("Flags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1293 1308])
                                    ("cf" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type ("CommonFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1309 1331]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1280 1332])
                            ("CopyTo" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("f" variable
                                       (:pointer 1
                                        :type ("Flags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1347 1356])
                                    ("cf" variable
                                       (:pointer 1
                                        :type ("CommonFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1357 1373]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1335 1374]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1064 1377])
                    ("InitializeAllocator" function
                       (:prototype-flag t
                        :arguments 
                          ( ("options" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AllocatorOptions" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1404 1436]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1379 1437])
                    ("ReInitializeAllocator" function
                       (:prototype-flag t
                        :arguments 
                          ( ("options" variable
                               (:reference 1
                                :constant-flag t
                                :type ("AllocatorOptions" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1465 1497]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1438 1498])
                    ("GetAllocatorOptions" function
                       (:prototype-flag t
                        :arguments 
                          ( ("options" variable
                               (:pointer 1
                                :type ("AllocatorOptions" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1524 1550]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1499 1551])
                    ("AsanChunkView" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1576 1583])
                            ("AsanChunkView" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("chunk" variable
                                       (:pointer 1
                                        :type ("AsanChunk" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1609 1626]))                                  
                                :type ("AsanChunkView" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1595 1645])
                            ("IsValid" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1648 1669])
                            ("IsAllocated" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1790 1815])
                            ("IsQuarantined" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type "bool")
                                (reparse-symbol classsubparts) [1869 1896])
                            ("Beg" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1950 1967])
                            ("End" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2011 2028])
                            ("UsedSize" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2071 2093])
                            ("UserRequestedAlignment" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("u32" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2133 2168])
                            ("AllocTid" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2207 2229])
                            ("FreeTid" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2232 2253])
                            ("Eq" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("c" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("AsanChunkView" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2264 2287]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2256 2324])
                            ("GetAllocStackId" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("u32" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2327 2355])
                            ("GetFreeStackId" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("u32" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2358 2385])
                            ("GetAllocStack" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("StackTrace" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2388 2421])
                            ("GetFreeStack" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("StackTrace" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2424 2456])
                            ("GetAllocType" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :type ("AllocType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2459 2490])
                            ("AddrIsInside" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2511 2521])
                                    ("access_size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2522 2539])
                                    ("offset" variable
                                       (:pointer 1
                                        :type ("sptr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2540 2553]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2493 2696])
                            ("AddrIsAtLeft" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2717 2727])
                                    ("access_size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2728 2745])
                                    ("offset" variable
                                       (:pointer 1
                                        :type ("sptr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2746 2759]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2699 2891])
                            ("AddrIsAtRight" function
                               (:methodconst-flag t
                                :arguments 
                                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2913 2923])
                                    ("access_size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2924 2941])
                                    ("offset" variable
                                       (:pointer 1
                                        :type ("sptr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2942 2955]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2894 3078])
                            ("private" label nil (reparse-symbol classsubparts) [3081 3089])
                            ("chunk_" variable
                               (:pointer 1
                                :type ("AsanChunk" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3092 3116]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1553 3119])
                    ("FindHeapChunkByAddress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("address" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3158 3171]))                          
                        :type ("AsanChunkView" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3121 3172])
                    ("FindHeapChunkByAllocBeg" function
                       (:prototype-flag t
                        :arguments 
                          ( ("address" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3211 3224]))                          
                        :type ("AsanChunkView" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [3173 3225])
                    ("AsanChunkFifoList" type
                       (:superclasses 
                          ( ("IntrusiveList" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [3326 3333])
                            ("AsanChunkFifoList" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("LinkerInitialized" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3363 3381]))                                  
                                :type ("AsanChunkFifoList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3345 3385])
                            ("AsanChunkFifoList" function
                               (:constructor-flag t
                                :type ("AsanChunkFifoList" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3388 3420])
                            ("Push" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("n" variable
                                       (:pointer 1
                                        :type ("AsanChunk" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3433 3446]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3423 3447])
                            ("PushList" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("q" variable
                                       (:pointer 1
                                        :type ("AsanChunkFifoList" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3464 3485]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3450 3486])
                            ("Pop" function
                               (:prototype-flag t
                                :pointer 1
                                :type ("AsanChunk" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3489 3506])
                            ("size" function (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3509 3538])
                            ("clear" function (:type "void") (reparse-symbol classsubparts) [3541 3613])
                            ("private" label nil (reparse-symbol classsubparts) [3615 3623])
                            ("size_" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3626 3637]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3266 3640])
                    ("AsanMapUnmapCallback" type
                       (:members 
                          ( ("OnMap" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("p" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3685 3692])
                                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3693 3703]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3674 3710])
                            ("OnUnmap" function
                               (:prototype-flag t
                                :methodconst-flag t
                                :arguments 
                                  ( ("p" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3726 3733])
                                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3734 3744]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3713 3751]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [3642 3754])
                    ("SizeClassMap" type
                       (:typedef ("CompactSizeClassMap" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [5788 5829])
                    ("AP32" type
                       (:template 
                          ( ("AddressSpaceViewTy" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("kSpaceBeg" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "0"
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5885 5917])
                            ("kSpaceSize" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "SANITIZER_MMAP_RANGE_SIZE"
                                :type ("u64" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5920 5976])
                            ("kMetadataSize" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "16"
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5979 6016])
                            ("SizeClassMap" type
                               (:typedef ("__asan::SizeClassMap" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6019 6061])
                            ("kRegionSizeLog" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "20"
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6064 6102])
                            ("AddressSpaceView" variable
                               (:default-value "AddressSpaceViewTy"
                                :type "int")
                                (reparse-symbol classsubparts) [6111 6149])
                            ("MapUnmapCallback" type
                               (:typedef ("AsanMapUnmapCallback" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [6152 6198])
                            ("kFlags" variable
                               (:typemodifiers ("static")
                                :constant-flag t
                                :default-value "0"
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6201 6230]))                          )
                        (reparse-symbol namespacesubparts) [5830 6233])
                    ("SizeClassAllocator32" variable (:type "int") (reparse-symbol namespacesubparts) [6300 6346])
                    ("PrimaryAllocatorASVT" variable (:type "int") (reparse-symbol namespacesubparts) [6372 6416])
                    ("SizeClassMap::kNumClasses" variable (:type "int") (reparse-symbol namespacesubparts) [6500 6526])
                    ("CombinedAllocator" variable (:type "int") (reparse-symbol namespacesubparts) [6595 6653])
                    ("AsanAllocatorASVT" variable (:type "int") (reparse-symbol namespacesubparts) [6676 6717])
                    ("AsanAllocator::AllocatorCache" variable (:type "int") (reparse-symbol namespacesubparts) [6741 6771])
                    ("AsanThreadLocalMallocStorage" type
                       (:members 
                          ( ("quarantine_cache" variable
                               (:dereference 1
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6813 6839])
                            ("allocator_cache" variable (:type ("AllocatorCache" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6842 6873])
                            ("CommitBack" function
                               (:prototype-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [6876 6894])
                            ("private" label nil (reparse-symbol classsubparts) [6896 6904])
                            ("AsanThreadLocalMallocStorage" function
                               (:constructor-flag t
                                :type ("AsanThreadLocalMallocStorage" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [6977 7010]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [6773 7013])
                    ("asan_memalign" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("alignment" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7035 7050])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7051 7061])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7062 7088])
                            ("alloc_type" variable (:type ("AllocType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7109 7130]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7015 7131])
                    ("asan_free" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [7147 7157])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7158 7184])
                            ("alloc_type" variable (:type ("AllocType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7185 7206]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7132 7207])
                    ("asan_delete" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [7225 7235])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7236 7246])
                            ("alignment" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7247 7262])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7280 7306])
                            ("alloc_type" variable (:type ("AllocType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7307 7328]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7208 7329])
                    ("asan_malloc" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7349 7359])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7360 7386]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7331 7387])
                    ("asan_calloc" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("nmemb" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7406 7417])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7418 7428])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7429 7455]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7388 7456])
                    ("asan_realloc" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("p" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [7476 7484])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7485 7495])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7496 7522]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7457 7523])
                    ("asan_reallocarray" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("p" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [7548 7556])
                            ("nmemb" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7557 7568])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7569 7579])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7604 7630]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7524 7631])
                    ("asan_valloc" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7650 7660])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7661 7687]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7632 7688])
                    ("asan_pvalloc" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7708 7718])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7719 7745]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7689 7746])
                    ("asan_aligned_alloc" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("alignment" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7773 7788])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7789 7799])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7800 7826]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [7748 7827])
                    ("asan_posix_memalign" function
                       (:prototype-flag t
                        :arguments 
                          ( ("memptr" variable
                               (:pointer 2
                                :type "void")
                                (reparse-symbol arg-sub-list) [7852 7866])
                            ("alignment" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7867 7882])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7883 7893])
                            ("stack" variable
                               (:pointer 1
                                :type ("BufferedStackTrace" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7918 7944]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [7828 7945])
                    ("asan_malloc_usable_size" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [7975 7991])
                            ("pc" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7992 8000])
                            ("bp" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8001 8009]))                          
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [7946 8010])
                    ("asan_mz_size" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ptr" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [8030 8046]))                          
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [8012 8047])
                    ("asan_mz_force_lock" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [8048 8074])
                    ("asan_mz_force_unlock" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [8075 8103])
                    ("PrintInternalAllocatorStats" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [8105 8140])
                    ("AsanSoftRssLimitExceededCallback" function
                       (:prototype-flag t
                        :arguments 
                          ( ("exceeded" variable (:type "bool") (reparse-symbol arg-sub-list) [8179 8193]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8141 8194]))                  
                :type "namespace")
                nil [805 8197]))          
      :file "asan_allocator.h"
      :pointmax 8247
      :fsize 8246
      :lastmodtime '(24391 25612 223943 495000)
      :unmatched-syntax '((punctuation 6739 . 6740) (symbol 6724 . 6738) (USING 6718 . 6723) (punctuation 6674 . 6675) (symbol 6660 . 6673) (USING 6654 . 6659) (punctuation 6589 . 6590) (symbol 6571 . 6588) (USING 6565 . 6570) (punctuation 6563 . 6564) (symbol 6547 . 6563) (TYPENAME 6538 . 6546) (punctuation 6537 . 6538) (TEMPLATE 6528 . 6536) (punctuation 6498 . 6499) (symbol 6477 . 6497) (symbol 6472 . 6476) (CONST 6466 . 6471) (STATIC 6459 . 6465) (punctuation 6370 . 6371) (symbol 6353 . 6369) (USING 6347 . 6352) (punctuation 6298 . 6299) (symbol 6277 . 6297) (USING 6271 . 6276) (punctuation 6269 . 6270) (symbol 6253 . 6269) (TYPENAME 6244 . 6252) (punctuation 6243 . 6244) (TEMPLATE 6234 . 6242) (USING 6105 . 6110) (EXPLICIT 3336 . 3344) (EXPLICIT 1586 . 1594))
      :lexical-table 
        '(("ASAN_ALLOCATOR_H")
          )
)
    (semanticdb-table "semanticdb-table-1585ebeb1118"
      :file "asan_descriptions.h"
      :fsize 7776
      :lastmodtime '(24391 25612 223943 495000))
    (semanticdb-table "semanticdb-table-1585ebeb1138"
      :file "asan_flags.h"
      :fsize 1482
      :lastmodtime '(24391 25612 223943 495000))
    (semanticdb-table "semanticdb-table-1585ebeb1158"
      :major-mode c++-mode
      :tags 
        '( ("ASAN_INTERNAL_H" variable (:constant-flag t) nil [624 639])
            ("asan_flags.h" include nil nil [641 664])
            ("asan_interface_internal.h" include nil nil [665 701])
            ("sanitizer_common/sanitizer_common.h" include nil nil [702 748])
            ("sanitizer_common/sanitizer_internal_defs.h" include nil nil [749 802])
            ("sanitizer_common/sanitizer_stacktrace.h" include nil nil [803 853])
            ("sanitizer_common/sanitizer_libc.h" include nil nil [854 898])
            ("ASAN_HAS_EXCEPTIONS" variable (:constant-flag t) nil [1209 1228])
            ("ASAN_LOW_MEMORY" variable (:constant-flag t) nil [1496 1511])
            ("ASAN_DYNAMIC" variable (:constant-flag t) nil [1605 1617])
            ("__asan" type
               (:members 
                  ( ("AsanThread" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [1918 1935])
                    ("__sanitizer::StackTrace" using (:type ("__sanitizer::StackTrace" type
                         (:prototype t
                          :type "class")
                          nil nil)) (reparse-symbol namespacesubparts) [1936 1966])
                    ("AsanInitFromRtl" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [1968 1991])
                    ("InitializePlatformExceptionHandlers" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [2009 2052])
                    ("IsSystemHeapAddress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2200 2210]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [2175 2211])
                    ("PrintAddressSpaceLayout" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [2229 2260])
                    ("ShowStatsAndAbort" function
                       (:prototype-flag t
                        :type ("NORETURN" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2266 2295])
                    ("InitializeShadowMemory" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [2322 2352])
                    ("ReplaceSystemMalloc" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [2401 2428])
                    ("FindDynamicShadowStart" function
                       (:prototype-flag t
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2495 2525])
                    ("AsanDoesNotSupportStaticLinkage" function
                       (:prototype-flag t
                        :pointer 1
                        :type "void")
                        (reparse-symbol namespacesubparts) [2526 2566])
                    ("AsanCheckDynamicRTPrereqs" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [2567 2600])
                    ("AsanCheckIncompatibleRT" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [2601 2632])
                    ("CreateMainThread" function
                       (:prototype-flag t
                        :pointer 1
                        :type ("AsanThread" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [2653 2684])
                    ("globals_op_fptr" function
                       (:prototype-flag t
                        :function-pointer t
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type ("__asan_global" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2970 2986])
                            ("" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2987 2992]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2946 2993])
                    ("AsanApplyToGlobals" function
                       (:prototype-flag t
                        :arguments 
                          ( ("op" variable (:type ("globals_op_fptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3018 3037])
                            ("needle" variable
                               (:pointer 1
                                :constant-flag t
                                :type "void")
                                (reparse-symbol arg-sub-list) [3038 3057]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2994 3058])
                    ("AsanOnDeadlySignal" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [3084 3088])
                            ("siginfo" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [3089 3103])
                            ("context" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [3104 3118]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3060 3119])
                    ("ReadContextStack" function
                       (:prototype-flag t
                        :arguments 
                          ( ("context" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [3143 3157])
                            ("stack" variable
                               (:pointer 1
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3158 3170])
                            ("ssize" variable
                               (:pointer 1
                                :type ("uptr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3171 3183]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3121 3184])
                    ("StopInitOrderChecking" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [3185 3214])
                    ("AsanTSDInit" function
                       (:prototype-flag t
                        :arguments 
                          ( ("destructor" function
                               (:function-pointer t
                                :arguments 
                                  ( ("tsd" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [3276 3286]))                                  
                                :type "void")
                                nil nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3240 3288])
                    ("AsanTSDGet" function
                       (:prototype-flag t
                        :pointer 1
                        :type "void")
                        (reparse-symbol namespacesubparts) [3289 3308])
                    ("AsanTSDSet" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tsd" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [3325 3335]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3309 3336])
                    ("PlatformTSDDtor" function
                       (:prototype-flag t
                        :arguments 
                          ( ("tsd" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [3358 3368]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3337 3369])
                    ("AppendToErrorMessageBuffer" function
                       (:prototype-flag t
                        :arguments 
                          ( ("buffer" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3403 3422]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3371 3423])
                    ("AsanDlSymNext" function
                       (:prototype-flag t
                        :pointer 1
                        :arguments 
                          ( ("sym" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3445 3461]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3425 3462])
                    ("ReserveShadowMemoryRange" function
                       (:prototype-flag t
                        :arguments 
                          ( ("beg" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3494 3503])
                            ("end" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3504 3513])
                            ("name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [3514 3531]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3464 3532])
                    ("HandleDlopenInit" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol namespacesubparts) [3742 3766])
                    ("ASAN_MALLOC_HOOK" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3866 3882])
                    ("ASAN_FREE_HOOK" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4172 4186])
                    ("ASAN_ON_ERROR" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4438 4451])
                    ("asan_inited" variable
                       (:typemodifiers ("extern")
                        :type "int")
                        (reparse-symbol namespacesubparts) [4499 4522])
                    ("asan_init_is_running" variable
                       (:typemodifiers ("extern")
                        :type "bool")
                        (reparse-symbol namespacesubparts) [4577 4610])
                    ("death_callback" function
                       (:prototype-flag t
                        :function-pointer t
                        :typemodifiers ("extern")
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4641 4646]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4611 4647])
                    ("kAsanHeapLeftRedzoneMagic" variable
                       (:constant-flag t
                        :default-value "0xfa"
                        :type "int")
                        (reparse-symbol namespacesubparts) [4720 4763])
                    ("kAsanHeapFreeMagic" variable
                       (:constant-flag t
                        :default-value "0xfd"
                        :type "int")
                        (reparse-symbol namespacesubparts) [4764 4800])
                    ("kAsanStackLeftRedzoneMagic" variable
                       (:constant-flag t
                        :default-value "0xf1"
                        :type "int")
                        (reparse-symbol namespacesubparts) [4801 4845])
                    ("kAsanStackMidRedzoneMagic" variable
                       (:constant-flag t
                        :default-value "0xf2"
                        :type "int")
                        (reparse-symbol namespacesubparts) [4846 4889])
                    ("kAsanStackRightRedzoneMagic" variable
                       (:constant-flag t
                        :default-value "0xf3"
                        :type "int")
                        (reparse-symbol namespacesubparts) [4890 4935])
                    ("kAsanStackAfterReturnMagic" variable
                       (:constant-flag t
                        :default-value "0xf5"
                        :type "int")
                        (reparse-symbol namespacesubparts) [4936 4980])
                    ("kAsanInitializationOrderMagic" variable
                       (:constant-flag t
                        :default-value "0xf6"
                        :type "int")
                        (reparse-symbol namespacesubparts) [4981 5028])
                    ("kAsanUserPoisonedMemoryMagic" variable
                       (:constant-flag t
                        :default-value "0xf7"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5029 5075])
                    ("kAsanContiguousContainerOOBMagic" variable
                       (:constant-flag t
                        :default-value "0xfc"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5076 5126])
                    ("kAsanStackUseAfterScopeMagic" variable
                       (:constant-flag t
                        :default-value "0xf8"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5127 5173])
                    ("kAsanGlobalRedzoneMagic" variable
                       (:constant-flag t
                        :default-value "0xf9"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5174 5215])
                    ("kAsanInternalHeapMagic" variable
                       (:constant-flag t
                        :default-value "0xfe"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5216 5256])
                    ("kAsanArrayCookieMagic" variable
                       (:constant-flag t
                        :default-value "0xac"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5257 5296])
                    ("kAsanIntraObjectRedzone" variable
                       (:constant-flag t
                        :default-value "0xbb"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5297 5338])
                    ("kAsanAllocaLeftMagic" variable
                       (:constant-flag t
                        :default-value "0xca"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5339 5377])
                    ("kAsanAllocaRightMagic" variable
                       (:constant-flag t
                        :default-value "0xcb"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5378 5417])
                    ("kAsanShadowGap" variable
                       (:constant-flag t
                        :default-value "0xcc"
                        :type "int")
                        (reparse-symbol namespacesubparts) [5515 5547])
                    ("kCurrentStackFrameMagic" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "0x41B58AB3"
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5549 5604])
                    ("kRetiredStackFrameMagic" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "0x45E0360E"
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [5605 5660]))                  
                :type "namespace")
                nil [1898 5663]))          
      :file "asan_internal.h"
      :pointmax 5713
      :fsize 5712
      :lastmodtime '(24391 26988 895292 274000)
      :unmatched-syntax '((TYPEDEF 2938 . 2945) (VOID 2261 . 2265))
      :lexical-table 
        '(("ASAN_MALLOC_HOOK" (spp-arg-list ("ptr" "size") 3882 . 3893) . 
              ((DO "do" 3932 . 3934) (semantic-list "{                                                                \\
    if (&__sanitizer_malloc_hook) __sanitizer_malloc_hook(ptr, size); \\
    RunMallocHooks(ptr, size);                                        \\
  }" 3935 . 4149) (WHILE "while" 4150 . 4155) (semantic-list "(false)" 4156 . 4163)))
          ("ASAN_INTERNAL_H")
          ("ASAN_DYNAMIC" . ((number "0" 1618 . 1619)))
          ("ASAN_FREE_HOOK" (spp-arg-list ("ptr") 4186 . 4191) . 
              ((DO "do" 4228 . 4230) (semantic-list "{                                                      \\
    if (&__sanitizer_free_hook) __sanitizer_free_hook(ptr); \\
    RunFreeHooks(ptr);                                      \\
  }" 4231 . 4415) (WHILE "while" 4416 . 4421) (semantic-list "(false)" 4422 . 4429)))
          ("ASAN_HAS_EXCEPTIONS" . ((number "1" 1229 . 1230)))
          ("ASAN_LOW_MEMORY" . ((number "0" 1512 . 1513)))
          ("ASAN_ON_ERROR" (spp-arg-list nil 4451 . 4453) . 
              ((IF "if" 4458 . 4460) (semantic-list "(&__asan_on_error)" 4461 . 4479) (symbol "__asan_on_error" 4480 . 4495) (semantic-list "()" 4495 . 4497)))
          )
)
    (semanticdb-table "semanticdb-table-1585ebeb1178"
      :file "asan_mapping.h"
      :fsize 15072
      :lastmodtime '(24391 26988 895292 274000))
    (semanticdb-table "semanticdb-table-1585ebeb1198"
      :file "asan_report.h"
      :fsize 4696
      :lastmodtime '(24391 25612 223943 495000))
    (semanticdb-table "semanticdb-table-1585ebeb11b8"
      :file "asan_thread.h"
      :fsize 5693
      :lastmodtime '(24391 25612 223943 495000))
    (semanticdb-table "semanticdb-table-1585ebeb11d8"
      :major-mode c++-mode
      :tags 
        '( ("asan_poisoning.h" include nil nil [593 620])
            ("asan_report.h" include nil nil [621 645])
            ("asan_stack.h" include nil nil [646 669])
            ("sanitizer_common/sanitizer_atomic.h" include nil nil [670 716])
            ("sanitizer_common/sanitizer_libc.h" include nil nil [717 761])
            ("sanitizer_common/sanitizer_flags.h" include nil nil [762 807])
            ("__asan" type
               (:members 
                  ( ("can_poison_memory" variable
                       (:typemodifiers ("static")
                        :type ("atomic_uint8_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [829 869])
                    ("SetCanPoisonMemory" function
                       (:arguments 
                          ( ("value" variable (:type "bool") (reparse-symbol arg-sub-list) [895 906]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [871 975])
                    ("CanPoisonMemory" function (:type "bool") (reparse-symbol namespacesubparts) [977 1067])
                    ("PoisonShadow" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1087 1097])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1098 1108])
                            ("value" variable (:type ("u8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1109 1118]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1069 1404])
                    ("PoisonShadowPartialRightRedzone" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1443 1453])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1491 1501])
                            ("redzone_size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1539 1557])
                            ("value" variable (:type ("u8" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1595 1604]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1406 1785])
                    ("ShadowSegmentEndpoint" type
                       (:members 
                          ( ("chunk" variable
                               (:pointer 1
                                :type ("u8" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1820 1830])
                            ("offset" variable (:type ("s8" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1833 1843])
                            ("value" variable (:type ("s8" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1877 1886])
                            ("ShadowSegmentEndpoint" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("address" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1935 1948]))                                  
                                :type ("ShadowSegmentEndpoint" type (:type "struct") nil nil))
                                (reparse-symbol classsubparts) [1913 2062]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1787 2065])
                    ("FlushUnneededASanShadowMemory" function
                       (:arguments 
                          ( ("p" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2102 2109])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2110 2120]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2067 2320])
                    ("AsanPoisonOrUnpoisonIntraObjectRedzone" function
                       (:arguments 
                          ( ("ptr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2366 2375])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2376 2386])
                            ("poison" variable (:type "bool") (reparse-symbol arg-sub-list) [2387 2399]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2322 3008]))                  
                :type "namespace")
                nil [809 3011])
            ("__asan" using (:type ("__asan" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [3092 3115])
            ("__asan_poison_memory_region" function
               (:arguments 
                  ( ("addr" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [3737 3763])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3764 3774]))                  
                :type "void")
                nil [3704 5052])
            ("__asan_unpoison_memory_region" function
               (:arguments 
                  ( ("addr" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [5089 5115])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5116 5126]))                  
                :type "void")
                nil [5054 6000])
            ("__asan_address_is_poisoned" function
               (:arguments 
                  ( ("addr" variable
                       (:pointer 1
                        :typemodifiers ("volatile")
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [6033 6059]))                  
                :type "int")
                nil [6002 6111])
            ("__asan_region_is_poisoned" function
               (:arguments 
                  ( ("beg" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6144 6153])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6154 6164]))                  
                :type ("uptr" type (:type "class") nil nil))
                nil [6113 7449])
            ("CHECK_SMALL_REGION" variable (:constant-flag t) nil [7459 7477])
            ("__sanitizer_unaligned_load16" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("uu16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8188 8202]))                  
                :type ("u16" type (:type "class") nil nil))
                nil [8155 8263])
            ("__sanitizer_unaligned_load32" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("uu32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8339 8353]))                  
                :type ("u32" type (:type "class") nil nil))
                nil [8306 8414])
            ("__sanitizer_unaligned_load64" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("uu64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8490 8504]))                  
                :type ("u64" type (:type "class") nil nil))
                nil [8457 8565])
            ("__sanitizer_unaligned_store16" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("uu16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8643 8651])
                    ("x" variable (:type ("u16" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8652 8658]))                  
                :type "void")
                nil [8608 8715])
            ("__sanitizer_unaligned_store32" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("uu32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8793 8801])
                    ("x" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8802 8808]))                  
                :type "void")
                nil [8758 8865])
            ("__sanitizer_unaligned_store64" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("uu64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8943 8951])
                    ("x" variable (:type ("u64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8952 8958]))                  
                :type "void")
                nil [8908 9015])
            ("__asan_poison_cxx_array_cookie" function
               (:arguments 
                  ( ("p" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9094 9101]))                  
                :type "void")
                nil [9058 9272])
            ("__asan_load_cxx_array_cookie" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9349 9357]))                  
                :type ("uptr" type (:type "class") nil nil))
                nil [9315 10200])
            ("PoisonAlignedStackMemory" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10387 10397])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10398 10408])
                    ("do_poison" variable (:type "bool") (reparse-symbol arg-sub-list) [10409 10424]))                  
                :type "void")
                nil [10350 11173])
            ("__asan_set_shadow_00" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11201 11211])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11212 11222]))                  
                :type "void")
                nil [11175 11265])
            ("__asan_set_shadow_f1" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11293 11303])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11304 11314]))                  
                :type "void")
                nil [11267 11360])
            ("__asan_set_shadow_f2" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11388 11398])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11399 11409]))                  
                :type "void")
                nil [11362 11455])
            ("__asan_set_shadow_f3" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11483 11493])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11494 11504]))                  
                :type "void")
                nil [11457 11550])
            ("__asan_set_shadow_f5" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11578 11588])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11589 11599]))                  
                :type "void")
                nil [11552 11645])
            ("__asan_set_shadow_f8" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11673 11683])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11684 11694]))                  
                :type "void")
                nil [11647 11740])
            ("__asan_poison_stack_memory" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11774 11784])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11785 11795]))                  
                :type "void")
                nil [11742 11902])
            ("__asan_unpoison_stack_memory" function
               (:arguments 
                  ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11938 11948])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11949 11959]))                  
                :type "void")
                nil [11904 12069])
            ("__sanitizer_annotate_contiguous_container" function
               (:arguments 
                  ( ("beg_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [12118 12136])
                    ("end_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [12184 12202])
                    ("old_mid_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [12250 12272])
                    ("new_mid_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [12320 12342]))                  
                :type "void")
                nil [12071 14297])
            ("__sanitizer_contiguous_container_find_bad_address" function
               (:pointer 1
                :constant-flag t
                :arguments 
                  ( ("beg_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [14366 14384])
                    ("mid_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [14385 14403])
                    ("end_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [14404 14422]))                  
                :type "void")
                nil [14299 15528])
            ("__sanitizer_verify_contiguous_container" function
               (:arguments 
                  ( ("beg_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [15574 15592])
                    ("mid_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [15637 15655])
                    ("end_p" variable
                       (:pointer 1
                        :constant-flag t
                        :type "void")
                        (reparse-symbol arg-sub-list) [15700 15718]))                  
                :type "int")
                nil [15530 15873])
            ("__asan_poison_intra_object_redzone" function
               (:arguments 
                  ( ("ptr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15956 15965])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15966 15976]))                  
                :type "void")
                nil [15916 16039])
            ("__asan_unpoison_intra_object_redzone" function
               (:arguments 
                  ( ("ptr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16124 16133])
                    ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16134 16144]))                  
                :type "void")
                nil [16082 16208])
            ("__lsan" type
               (:members 
                  ( ("WordIsPoisoned" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16307 16317]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [16287 16384]))                  
                :type "namespace")
                nil [16268 16386]))          
      :file "asan_poisoning.cpp"
      :pointmax 16387
      :fsize 16386
      :lastmodtime '(24391 26988 895292 274000)
      :unmatched-syntax '((symbol 16052 . 16081) (symbol 15886 . 15915) (symbol 9285 . 9314) (symbol 9028 . 9057) (symbol 8878 . 8907) (symbol 8728 . 8757) (symbol 8578 . 8607) (symbol 8427 . 8456) (symbol 8276 . 8305) (symbol 8125 . 8154) (EXPLICIT 1904 . 1912))
      :lexical-table 
        '(("CHECK_SMALL_REGION" (spp-arg-list ("p" "size" "isWrite") 7477 . 7495) . 
              ((DO "do" 7517 . 7519) (semantic-list "{                                                        \\
    uptr __p = reinterpret_cast<uptr>(p);                     \\
    uptr __size = size;                                       \\
    if (UNLIKELY(__asan::AddressIsPoisoned(__p) ||            \\
        __asan::AddressIsPoisoned(__p + __size - 1))) {       \\
      GET_CURRENT_PC_BP_SP;                                   \\
      uptr __bad = __asan_region_is_poisoned(__p, __size);    \\
      __asan_report_error(pc, bp, sp, __bad, isWrite, __size, 0);\\
    }                                                         \\
  }" 7520 . 8097) (WHILE "while" 8098 . 8103) (semantic-list "(false)" 8104 . 8111)))
          )
)
    (semanticdb-table "semanticdb-table-1585ebeb11f8"
      :file "asan_poisoning.h"
      :fsize 3944
      :lastmodtime '(24391 25612 223943 495000))
    (semanticdb-table "semanticdb-table-1585ebeb1218"
      :major-mode c++-mode
      :tags 
        '( ("ASAN_STACK_H" variable (:constant-flag t) nil [601 613])
            ("asan_flags.h" include nil nil [615 638])
            ("asan_thread.h" include nil nil [639 663])
            ("sanitizer_common/sanitizer_flags.h" include nil nil [664 709])
            ("sanitizer_common/sanitizer_stacktrace.h" include nil nil [710 760])
            ("__asan" type
               (:members 
                  ( ("kDefaultMallocContextSize" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :default-value "30"
                        :type ("u32" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [782 830])
                    ("SetMallocContextSize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("size" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [858 867]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [832 868])
                    ("GetMallocContextSize" function
                       (:prototype-flag t
                        :type ("u32" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [869 896]))                  
                :type "namespace")
                nil [762 899])
            ("GET_STACK_TRACE" variable (:constant-flag t) nil [1146 1161])
            ("GET_STACK_TRACE_FATAL" variable (:constant-flag t) nil [1955 1976])
            ("GET_STACK_TRACE_SIGNAL" variable (:constant-flag t) nil [2168 2190])
            ("GET_STACK_TRACE_FATAL_HERE" variable (:constant-flag t) nil [2453 2479])
            ("GET_STACK_TRACE_CHECK_HERE" variable (:constant-flag t) nil [2594 2620])
            ("GET_STACK_TRACE_THREAD" variable (:constant-flag t) nil [2735 2757])
            ("GET_STACK_TRACE_MALLOC" variable (:constant-flag t) nil [2844 2866])
            ("GET_STACK_TRACE_FREE" variable (:constant-flag t) nil [3007 3027])
            ("PRINT_CURRENT_STACK" variable (:constant-flag t) nil [3060 3079])
            ("PRINT_CURRENT_STACK_CHECK" variable (:constant-flag t) nil [3201 3226]))          
      :file "asan_stack.h"
      :pointmax 3373
      :fsize 3372
      :lastmodtime '(24391 25612 223943 495000)
      :unmatched-syntax nil
      :lexical-table 
        '(("GET_STACK_TRACE_THREAD" . ((symbol "GET_STACK_TRACE" 2797 . 2812) (semantic-list "(kStackTraceMax, true)" 2812 . 2834)))
          ("PRINT_CURRENT_STACK_CHECK" (spp-arg-list nil 3226 . 3228) . ((semantic-list "{                                 \\
    GET_STACK_TRACE_CHECK_HERE;     \\
    stack.Print();                  \\
  }" 3233 . 3348)))
          ("ASAN_STACK_H")
          ("GET_STACK_TRACE_MALLOC" . ((symbol "GET_STACK_TRACE" 2919 . 2934) (semantic-list "(GetMallocContextSize(), common_flags()->fast_unwind_on_malloc)" 2934 . 2997)))
          ("GET_STACK_TRACE_FREE" . ((symbol "GET_STACK_TRACE_MALLOC" 3028 . 3050)))
          ("GET_STACK_TRACE_FATAL" (spp-arg-list ("pc" "bp") 1976 . 1984) . 
              ((symbol "BufferedStackTrace" 2002 . 2020) (symbol "stack" 2021 . 2026) (punctuation ";" 2026 . 2027) (symbol "stack" 2055 . 2060) (punctuation "." 2060 . 2061) (symbol "Unwind" 2061 . 2067) (semantic-list "(pc, bp, nullptr,                    \\
               common_flags()->fast_unwind_on_fatal)" 2067 . 2158)))
          ("PRINT_CURRENT_STACK" (spp-arg-list nil 3079 . 3081) . ((semantic-list "{                             \\
    GET_STACK_TRACE_FATAL_HERE; \\
    stack.Print();              \\
  }" 3088 . 3191)))
          ("GET_STACK_TRACE" (spp-arg-list ("max_size" "fast") 1161 . 1177) . 
              ((symbol "BufferedStackTrace" 1207 . 1225) (symbol "stack" 1226 . 1231) (punctuation ";" 1231 . 1232) (IF "if" 1274 . 1276) (semantic-list "(max_size <= 2)" 1277 . 1292) (semantic-list "{                                           \\
    stack.size = max_size;                                       \\
    if (max_size > 0) {                                          \\
      stack.top_frame_bp = GET_CURRENT_FRAME();                  \\
      stack.trace_buffer[0] = StackTrace::GetCurrentPc();        \\
      if (max_size > 1) stack.trace_buffer[1] = GET_CALLER_PC(); \\
    }                                                            \\
  }" 1293 . 1744) (ELSE "else" 1745 . 1749) (semantic-list "{                                                       \\
    stack.Unwind(StackTrace::GetCurrentPc(),                     \\
                 GET_CURRENT_FRAME(), nullptr, fast, max_size);  \\
  }" 1750 . 1945)))
          ("GET_STACK_TRACE_CHECK_HERE" . ((symbol "GET_STACK_TRACE" 2656 . 2671) (semantic-list "(kStackTraceMax, common_flags()->fast_unwind_on_check)" 2671 . 2725)))
          ("GET_STACK_TRACE_SIGNAL" (spp-arg-list ("sig") 2190 . 2195) . 
              ((symbol "BufferedStackTrace" 2239 . 2257) (symbol "stack" 2258 . 2263) (punctuation ";" 2263 . 2264) (symbol "stack" 2316 . 2321) (punctuation "." 2321 . 2322) (symbol "Unwind" 2322 . 2328) (semantic-list "((sig).pc, (sig).bp, (sig).context,                          \\
               common_flags()->fast_unwind_on_fatal)" 2328 . 2443)))
          ("GET_STACK_TRACE_FATAL_HERE" . ((symbol "GET_STACK_TRACE" 2515 . 2530) (semantic-list "(kStackTraceMax, common_flags()->fast_unwind_on_fatal)" 2530 . 2584)))
          )
)
    (semanticdb-table "semanticdb-table-1585ebeb125e"
      :major-mode c++-mode
      :tags 
        '( ("ASAN_INTERCEPTORS_H" variable (:constant-flag t) nil [613 632])
            ("asan_internal.h" include nil nil [634 660])
            ("asan_interceptors_memintrinsics.h" include nil nil [661 705])
            ("interception/interception.h" include nil nil [706 744])
            ("sanitizer_common/sanitizer_platform_interceptors.h" include nil nil [745 806])
            ("__asan" type
               (:members 
                  ( ("InitializeAsanInterceptors" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [828 862])
                    ("InitializePlatformInterceptors" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [863 901])
                    ("ENSURE_ASAN_INITED" variable (:constant-flag t) (reparse-symbol namespacesubparts) [911 929]))                  
                :type "namespace")
                nil [808 1135])
            ("ASAN_INTERCEPT_ATOLL_AND_STRTOLL" variable (:constant-flag t) nil [1499 1531])
            ("ASAN_INTERCEPT__LONGJMP" variable (:constant-flag t) nil [1543 1566])
            ("ASAN_INTERCEPT_INDEX" variable (:constant-flag t) nil [1578 1598])
            ("ASAN_INTERCEPT_PTHREAD_CREATE" variable (:constant-flag t) nil [1610 1639])
            ("ASAN_USE_ALIAS_ATTRIBUTE_FOR_INDEX" variable (:constant-flag t) nil [1957 1991])
            ("ASAN_INTERCEPT_SWAPCONTEXT" variable (:constant-flag t) nil [2120 2146])
            ("ASAN_INTERCEPT_SIGLONGJMP" variable (:constant-flag t) nil [2189 2214])
            ("ASAN_INTERCEPT___LONGJMP_CHK" variable (:constant-flag t) nil [2365 2393])
            ("ASAN_INTERCEPT___CXA_THROW" variable (:constant-flag t) nil [2808 2834])
            ("ASAN_INTERCEPT___CXA_RETHROW_PRIMARY_EXCEPTION" variable (:constant-flag t) nil [2846 2892])
            ("ASAN_INTERCEPT__UNWIND_RAISEEXCEPTION" variable (:constant-flag t) nil [2904 2941])
            ("ASAN_INTERCEPT__UNWIND_SJLJ_RAISEEXCEPTION" variable (:constant-flag t) nil [2953 2995])
            ("ASAN_INTERCEPT___CXA_ATEXIT" variable (:constant-flag t) nil [3038 3065])
            ("ASAN_INTERCEPT_ATEXIT" variable (:constant-flag t) nil [3190 3211])
            ("ASAN_INTERCEPT___STRDUP" variable (:constant-flag t) nil [3314 3337])
            ("ASAN_INTERCEPT_VFORK" variable (:constant-flag t) nil [3531 3551])
            ("ASAN_INTERCEPT_PTHREAD_ATFORK" variable (:constant-flag t) nil [3639 3668])
            ("ASAN_INTERCEPT_FUNC" variable (:constant-flag t) nil [4056 4075])
            ("ASAN_INTERCEPT_FUNC_VER" variable (:constant-flag t) nil [4374 4397]))          
      :file "asan_interceptors.h"
      :pointmax 4973
      :fsize 4972
      :lastmodtime '(24391 25612 223943 495000)
      :unmatched-syntax '((semantic-list 3980 . 4027) (symbol 3968 . 3980) (semantic-list 3924 . 3967) (symbol 3912 . 3924) (semantic-list 3856 . 3911) (symbol 3844 . 3856) (semantic-list 3812 . 3843) (symbol 3800 . 3812) (semantic-list 3760 . 3799) (symbol 3748 . 3760) (semantic-list 3691 . 3747) (symbol 3679 . 3691))
      :lexical-table 
        '(("ASAN_USE_ALIAS_ATTRIBUTE_FOR_INDEX" . ((number "0" 1992 . 1993)))
          ("ASAN_INTERCEPT___LONGJMP_CHK" . ((number "0" 2394 . 2395)))
          ("ASAN_INTERCEPT__LONGJMP" . ((number "1" 1567 . 1568)))
          ("ASAN_INTERCEPT___CXA_RETHROW_PRIMARY_EXCEPTION" . ((number "0" 2893 . 2894)))
          ("ASAN_INTERCEPT__UNWIND_RAISEEXCEPTION" . ((number "0" 2942 . 2943)))
          ("ASAN_INTERCEPT__UNWIND_SJLJ_RAISEEXCEPTION" . ((number "0" 2996 . 2997)))
          ("ASAN_INTERCEPT___CXA_ATEXIT" . ((number "1" 3066 . 3067)))
          ("ASAN_INTERCEPT___STRDUP" . ((number "0" 3338 . 3339)))
          ("ASAN_INTERCEPT_FUNC" (spp-arg-list ("name") 4075 . 4081) . 
              ((DO "do" 4126 . 4128) (semantic-list "{                                                                    \\
    if (!INTERCEPT_FUNCTION(name))                                        \\
      VReport(1, \"AddressSanitizer: failed to intercept '%s'\\n'\", #name); \\
  }" 4129 . 4355) (WHILE "while" 4356 . 4361) (semantic-list "(0)" 4362 . 4365)))
          ("ASAN_INTERCEPT_FUNC_VER" (spp-arg-list ("name" "ver") 4397 . 4408) . 
              ((DO "do" 4446 . 4448) (semantic-list "{                                                                      \\
    if (!INTERCEPT_FUNCTION_VER(name, ver))                                 \\
      VReport(1, \"AddressSanitizer: failed to intercept '%s@@%s'\\n\", #name, \\
              #ver);                                                        \\
  }" 4449 . 4759) (WHILE "while" 4760 . 4765) (semantic-list "(0)" 4766 . 4769)))
          ("ASAN_INTERCEPTORS_H")
          ("ASAN_INTERCEPT_PTHREAD_ATFORK" . ((number "0" 3669 . 3670)))
          ("ENSURE_ASAN_INITED" (spp-arg-list nil 929 . 931) . 
              ((DO "do" 941 . 943) (semantic-list "{                            \\
    CHECK(!asan_init_is_running); \\
    if (UNLIKELY(!asan_inited)) { \\
      AsanInitFromRtl();          \\
    }                             \\
  }" 944 . 1122) (WHILE "while" 1123 . 1128) (semantic-list "(0)" 1129 . 1132)))
          ("ASAN_INTERCEPT_SWAPCONTEXT" . ((number "0" 2147 . 2148)))
          ("ASAN_INTERCEPT_PTHREAD_CREATE" . ((number "1" 1640 . 1641)))
          ("ASAN_INTERCEPT_INDEX" . ((number "1" 1599 . 1600)))
          ("ASAN_INTERCEPT___CXA_THROW" . ((number "0" 2835 . 2836)))
          ("ASAN_INTERCEPT_VFORK" . ((number "0" 3552 . 3553)))
          ("ASAN_INTERCEPT_ATOLL_AND_STRTOLL" . ((number "1" 1532 . 1533)))
          ("ASAN_INTERCEPT_SIGLONGJMP" . ((number "1" 2215 . 2216)))
          ("ASAN_INTERCEPT_ATEXIT" . ((number "0" 3212 . 3213)))
          )
)
    (semanticdb-table "semanticdb-table-1585eb3b625c"
      :major-mode c++-mode
      :tags 
        '( ("ASAN_MEMINTRIN_H" variable (:constant-flag t) nil [622 638])
            ("asan_interface_internal.h" include nil nil [640 676])
            ("asan_internal.h" include nil nil [677 703])
            ("asan_mapping.h" include nil nil [704 729])
            ("interception/interception.h" include nil nil [730 768])
            ("__asan" type
               (:members 
                  ( ("QuickCheckForUnpoisonedRegion" function
                       (:typemodifiers ("static" "inline")
                        :arguments 
                          ( ("beg" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1087 1096])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1097 1107]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [1038 1563])
                    ("AsanInterceptorContext" type
                       (:members 
                          ( ("interceptor_name" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol classsubparts) [1599 1628]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [1565 1631])
                    ("ACCESS_MEMORY_RANGE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1873 1892])
                    ("ASAN_MEMCPY_IMPL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3842 3858])
                    ("ASAN_MEMSET_IMPL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5002 5018])
                    ("ASAN_MEMMOVE_IMPL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5831 5848])
                    ("ASAN_READ_RANGE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6521 6536])
                    ("ASAN_WRITE_RANGE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6614 6630])
                    ("RangesOverlap" function
                       (:typemodifiers ("static" "inline")
                        :arguments 
                          ( ("offset1" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [6909 6929])
                            ("length1" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6930 6943])
                            ("offset2" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [6977 6997])
                            ("length2" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6998 7011]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [6876 7093])
                    ("CHECK_RANGES_OVERLAP" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7102 7122]))                  
                :type "namespace")
                nil [897 8265]))          
      :file "asan_interceptors_memintrinsics.h"
      :pointmax 8316
      :fsize 8315
      :lastmodtime '(24391 25612 223943 495000)
      :unmatched-syntax '((semantic-list 849 . 895) (symbol 837 . 849) (semantic-list 782 . 836) (symbol 770 . 782))
      :lexical-table 
        '(("ASAN_MEMINTRIN_H")
          ("ASAN_MEMMOVE_IMPL" (spp-arg-list ("ctx" "to" "from" "size") 5848 . 5869) . 
              ((DO "do" 5900 . 5902) (semantic-list "{                                                                   \\
    if (UNLIKELY(!asan_inited)) return internal_memmove(to, from, size); \\
    ENSURE_ASAN_INITED();                                                \\
    if (flags()->replace_intrin) {                                       \\
      ASAN_READ_RANGE(ctx, from, size);                                  \\
      ASAN_WRITE_RANGE(ctx, to, size);                                   \\
    }                                                                    \\
    return internal_memmove(to, from, size);                             \\
  }" 5903 . 6501) (WHILE "while" 6502 . 6507) (semantic-list "(0)" 6508 . 6511)))
          ("ACCESS_MEMORY_RANGE" (spp-arg-list ("ctx" "offset" "size" "isWrite") 1892 . 1920) . 
              ((DO "do" 1921 . 1923) (semantic-list "{            \\
    uptr __offset = (uptr)(offset);                                     \\
    uptr __size = (uptr)(size);                                         \\
    uptr __bad = 0;                                                     \\
    if (__offset > __offset + __size) {                                 \\
      GET_STACK_TRACE_FATAL_HERE;                                       \\
      ReportStringFunctionSizeOverflow(__offset, __size, &stack);       \\
    }                                                                   \\
    if (!QuickCheckForUnpoisonedRegion(__offset, __size) &&             \\
        (__bad = __asan_region_is_poisoned(__offset, __size))) {        \\
      AsanInterceptorContext *_ctx = (AsanInterceptorContext *)ctx;     \\
      bool suppressed = false;                                          \\
      if (_ctx) {                                                       \\
        suppressed = IsInterceptorSuppressed(_ctx->interceptor_name);   \\
        if (!suppressed && HaveStackTraceBasedSuppressions()) {         \\
          GET_STACK_TRACE_FATAL_HERE;                                   \\
          suppressed = IsStackTraceSuppressed(&stack);                  \\
        }                                                               \\
      }                                                                 \\
      if (!suppressed) {                                                \\
        GET_CURRENT_PC_BP_SP;                                           \\
        ReportGenericError(pc, bp, sp, __bad, isWrite, __size, 0, false);\\
      }                                                                 \\
    }                                                                   \\
  }" 1924 . 3645) (WHILE "while" 3646 . 3651) (semantic-list "(0)" 3652 . 3655)))
          ("ASAN_MEMCPY_IMPL" (spp-arg-list ("ctx" "to" "from" "size") 3858 . 3879) . 
              ((DO "do" 3910 . 3912) (semantic-list "{                                                                  \\
    if (UNLIKELY(!asan_inited)) return internal_memcpy(to, from, size); \\
    if (asan_init_is_running) {                                         \\
      return REAL(memcpy)(to, from, size);                              \\
    }                                                                   \\
    ENSURE_ASAN_INITED();                                               \\
    if (flags()->replace_intrin) {                                      \\
      if (to != from) {                                                 \\
        CHECK_RANGES_OVERLAP(\"memcpy\", to, size, from, size);           \\
      }                                                                 \\
      ASAN_READ_RANGE(ctx, from, size);                                 \\
      ASAN_WRITE_RANGE(ctx, to, size);                                  \\
    }                                                                   \\
    return REAL(memcpy)(to, from, size);                                \\
  }" 3913 . 4947) (WHILE "while" 4948 . 4953) (semantic-list "(0)" 4954 . 4957)))
          ("CHECK_RANGES_OVERLAP" (spp-arg-list ("name" "_offset1" "length1" "_offset2" "length2") 7122 . 7166) . 
              ((DO "do" 7173 . 7175) (semantic-list "{                                                                     \\
    const char *offset1 = (const char *)_offset1;                          \\
    const char *offset2 = (const char *)_offset2;                          \\
    if (RangesOverlap(offset1, length1, offset2, length2)) {               \\
      GET_STACK_TRACE_FATAL_HERE;                                          \\
      bool suppressed = IsInterceptorSuppressed(name);                     \\
      if (!suppressed && HaveStackTraceBasedSuppressions()) {              \\
        suppressed = IsStackTraceSuppressed(&stack);                       \\
      }                                                                    \\
      if (!suppressed) {                                                   \\
        ReportStringFunctionMemoryRangesOverlap(name, offset1, length1,    \\
                                                offset2, length2, &stack); \\
      }                                                                    \\
    }                                                                      \\
  }" 7176 . 8252) (WHILE "while" 8253 . 8258) (semantic-list "(0)" 8259 . 8262)))
          ("ASAN_WRITE_RANGE" (spp-arg-list ("ctx" "offset" "size") 6630 . 6649) . ((symbol "ACCESS_MEMORY_RANGE" 6654 . 6673) (semantic-list "(ctx, offset, size, true)" 6673 . 6698)))
          ("ASAN_MEMSET_IMPL" (spp-arg-list ("ctx" "block" "c" "size") 5018 . 5039) . 
              ((DO "do" 5070 . 5072) (semantic-list "{                                                                  \\
    if (UNLIKELY(!asan_inited)) return internal_memset(block, c, size); \\
    if (asan_init_is_running) {                                         \\
      return REAL(memset)(block, c, size);                              \\
    }                                                                   \\
    ENSURE_ASAN_INITED();                                               \\
    if (flags()->replace_intrin) {                                      \\
      ASAN_WRITE_RANGE(ctx, block, size);                               \\
    }                                                                   \\
    return REAL(memset)(block, c, size);                                \\
  }" 5073 . 5811) (WHILE "while" 5812 . 5817) (semantic-list "(0)" 5818 . 5821)))
          ("ASAN_READ_RANGE" (spp-arg-list ("ctx" "offset" "size") 6536 . 6555) . ((symbol "ACCESS_MEMORY_RANGE" 6560 . 6579) (semantic-list "(ctx, offset, size, false)" 6579 . 6605)))
          )
)
    (semanticdb-table "semanticdb-table-1585eaecf508"
      :major-mode c++-mode
      :tags 
        '( ("ASAN_ACTIVATION_H" variable (:constant-flag t) nil [602 619])
            ("__asan" type
               (:members 
                  ( ("AsanDeactivate" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [640 662])
                    ("AsanActivate" function
                       (:prototype-flag t
                        :type "void")
                        (reparse-symbol namespacesubparts) [663 683]))                  
                :type "namespace")
                nil [621 685]))          
      :file "asan_activation.h"
      :pointmax 737
      :fsize 736
      :lastmodtime '(24391 25612 219943 184000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ASAN_ACTIVATION_H")
          )
)
    (semanticdb-table "semanticdb-table-1585eb422954"
      :major-mode c++-mode
      :tags 
        '( ("asan_activation.h" include nil nil [568 596])
            ("asan_allocator.h" include nil nil [597 624])
            ("asan_flags.h" include nil nil [625 648])
            ("asan_internal.h" include nil nil [649 675])
            ("asan_mapping.h" include nil nil [676 701])
            ("asan_poisoning.h" include nil nil [702 729])
            ("asan_stack.h" include nil nil [730 753])
            ("sanitizer_common/sanitizer_common.h" include nil nil [754 800])
            ("sanitizer_common/sanitizer_flags.h" include nil nil [801 846])
            ("__asan" type
               (:members 
                  ( ("asan_deactivated_flags" variable
                       (:typemodifiers ("static")
                        :type ("AsanDeactivatedFlags" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol namespacesubparts) [868 3091])
                    ("AsanDeactivatedFlags" type
                       (:members 
                          ( ("allocator_options" variable (:type ("AllocatorOptions" type (:type "class") nil nil)) (reparse-symbol classsubparts) [907 942])
                            ("malloc_context_size" variable (:type "int") (reparse-symbol classsubparts) [945 969])
                            ("poison_heap" variable (:type "bool") (reparse-symbol classsubparts) [972 989])
                            ("coverage" variable (:type "bool") (reparse-symbol classsubparts) [992 1006])
                            ("coverage_dir" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol classsubparts) [1009 1034])
                            ("RegisterActivationFlags" function
                               (:arguments 
                                  ( ("parser" variable
                                       (:pointer 1
                                        :type ("FlagParser" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1067 1086])
                                    ("f" variable
                                       (:pointer 1
                                        :type ("Flags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1087 1096])
                                    ("cf" variable
                                       (:pointer 1
                                        :type ("CommonFlags" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1097 1113]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1038 1432])
                            ("OverrideFromActivationFlags" function (:type "void") (reparse-symbol classsubparts) [1436 2395])
                            ("Print" function (:type "void") (reparse-symbol classsubparts) [2399 3065]))                          
                        :type "struct")
                        (reparse-symbol namespacesubparts) [868 3091])
                    ("asan_is_deactivated" variable
                       (:typemodifiers ("static")
                        :type "bool")
                        (reparse-symbol namespacesubparts) [3093 3125])
                    ("AsanDeactivate" function (:type "void") (reparse-symbol namespacesubparts) [3127 4129])
                    ("AsanActivate" function (:type "void") (reparse-symbol namespacesubparts) [4131 4632]))                  
                :type "namespace")
                nil [848 4635]))          
      :file "asan_activation.cpp"
      :pointmax 4657
      :fsize 4656
      :lastmodtime '(24391 25612 219943 184000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1585eb46b64a"
      :file "asan_interface_internal.h"
      :fsize 11145
      :lastmodtime '(24391 25612 223943 495000))
    (semanticdb-table "semanticdb-table-1585eb594650"
      :major-mode c++-mode
      :tags 
        '( ("asan_activation.h" include nil nil [572 600])
            ("asan_allocator.h" include nil nil [601 628])
            ("asan_interceptors.h" include nil nil [629 659])
            ("asan_interface_internal.h" include nil nil [660 696])
            ("asan_internal.h" include nil nil [697 723])
            ("asan_mapping.h" include nil nil [724 749])
            ("asan_poisoning.h" include nil nil [750 777])
            ("asan_report.h" include nil nil [778 802])
            ("asan_stack.h" include nil nil [803 826])
            ("asan_stats.h" include nil nil [827 850])
            ("asan_suppressions.h" include nil nil [851 881])
            ("asan_thread.h" include nil nil [882 906])
            ("sanitizer_common/sanitizer_atomic.h" include nil nil [907 953])
            ("sanitizer_common/sanitizer_flags.h" include nil nil [954 999])
            ("sanitizer_common/sanitizer_libc.h" include nil nil [1000 1044])
            ("sanitizer_common/sanitizer_symbolizer.h" include nil nil [1045 1095])
            ("lsan/lsan_common.h" include nil nil [1096 1125])
            ("ubsan/ubsan_init.h" include nil nil [1126 1155])
            ("ubsan/ubsan_platform.h" include nil nil [1156 1189])
            ("__asan_shadow_memory_dynamic_address" variable (:type ("uptr" type (:type "class") nil nil)) nil [1191 1233])
            ("__asan_option_detect_stack_use_after_return" variable (:type "int") nil [1263 1311])
            ("__asan_test_only_reported_buggy_pointer" variable
               (:pointer 1
                :type ("uptr" type (:type "class") nil nil))
                nil [1341 1387])
            ("__asan" type
               (:members 
                  ( ("AsanMappingProfile" variable
                       (:dereference 1
                        :type ("uptr" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1441 1490])
                    ("AsanDie" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol namespacesubparts) [1492 2229])
                    ("AsanCheckFailed" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("file" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [2259 2276])
                            ("line" variable (:type "int") (reparse-symbol arg-sub-list) [2277 2286])
                            ("cond" variable
                               (:pointer 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [2287 2304])
                            ("v1" variable (:type ("u64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2333 2340])
                            ("v2" variable (:type ("u64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2341 2348]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [2231 2744])
                    ("asan_inited" variable (:type "int") (reparse-symbol namespacesubparts) [2811 2827])
                    ("asan_init_is_running" variable (:type "bool") (reparse-symbol namespacesubparts) [2828 2854])
                    ("kHighMemEnd" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2880 2921])
                    ("kMidMemBeg" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2880 2921])
                    ("kMidMemEnd" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [2880 2921])
                    ("ShowStatsAndAbort" function (:type "void") (reparse-symbol namespacesubparts) [2987 3060])
                    ("OnLowLevelAllocate" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("ptr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3152 3161])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3162 3172]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [3121 3227])
                    ("ASAN_REPORT_ERROR" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3329 3346])
                    ("__asan_report_load1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4442 4475])
                    ("__asan_report_exp_load1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4442 4475])
                    ("__asan_report_load1_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4442 4475])
                    ("__asan_report_load2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4476 4509])
                    ("__asan_report_exp_load2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4476 4509])
                    ("__asan_report_load2_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4476 4509])
                    ("__asan_report_load4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4510 4543])
                    ("__asan_report_exp_load4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4510 4543])
                    ("__asan_report_load4_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4510 4543])
                    ("__asan_report_load8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4544 4577])
                    ("__asan_report_exp_load8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4544 4577])
                    ("__asan_report_load8_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4544 4577])
                    ("__asan_report_load16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4578 4612])
                    ("__asan_report_exp_load16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4578 4612])
                    ("__asan_report_load16_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4578 4612])
                    ("__asan_report_store1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4613 4646])
                    ("__asan_report_exp_store1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4613 4646])
                    ("__asan_report_store1_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4613 4646])
                    ("__asan_report_store2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4647 4680])
                    ("__asan_report_exp_store2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4647 4680])
                    ("__asan_report_store2_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4647 4680])
                    ("__asan_report_store4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4681 4714])
                    ("__asan_report_exp_store4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4681 4714])
                    ("__asan_report_store4_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4681 4714])
                    ("__asan_report_store8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4715 4748])
                    ("__asan_report_exp_store8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4715 4748])
                    ("__asan_report_store8_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4715 4748])
                    ("__asan_report_store16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4749 4783])
                    ("__asan_report_exp_store16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4749 4783])
                    ("__asan_report_store16_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [4749 4783])
                    ("ASAN_REPORT_ERROR_N" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4793 4812])
                    ("__asan_report_load_n" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [6034 6066])
                    ("__asan_report_exp_load_n" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [6034 6066])
                    ("__asan_report_load_n_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [6034 6066])
                    ("__asan_report_store_n" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [6067 6099])
                    ("__asan_report_exp_store_n" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [6067 6099])
                    ("__asan_report_store_n_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [6067 6099])
                    ("ASAN_MEMORY_ACCESS_CALLBACK_BODY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6109 6141])
                    ("ASAN_MEMORY_ACCESS_CALLBACK" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7574 7601])
                    ("__asan_load1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8620 8663])
                    ("__asan_exp_load1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8620 8663])
                    ("__asan_load1_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8620 8663])
                    ("__asan_load2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8664 8707])
                    ("__asan_exp_load2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8664 8707])
                    ("__asan_load2_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8664 8707])
                    ("__asan_load4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8708 8751])
                    ("__asan_exp_load4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8708 8751])
                    ("__asan_load4_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8708 8751])
                    ("__asan_load8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8752 8795])
                    ("__asan_exp_load8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8752 8795])
                    ("__asan_load8_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8752 8795])
                    ("__asan_load16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8796 8840])
                    ("__asan_exp_load16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8796 8840])
                    ("__asan_load16_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8796 8840])
                    ("__asan_store1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8841 8884])
                    ("__asan_exp_store1" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8841 8884])
                    ("__asan_store1_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8841 8884])
                    ("__asan_store2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8885 8928])
                    ("__asan_exp_store2" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8885 8928])
                    ("__asan_store2_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8885 8928])
                    ("__asan_store4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8929 8972])
                    ("__asan_exp_store4" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8929 8972])
                    ("__asan_store4_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8929 8972])
                    ("__asan_store8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8973 9016])
                    ("__asan_exp_store8" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8973 9016])
                    ("__asan_store8_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [8973 9016])
                    ("__asan_store16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9017 9061])
                    ("__asan_exp_store16" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9017 9061])
                    ("__asan_store16_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9017 9061])
                    ("__asan_loadN" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9121 9131])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9132 9142]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9103 9286])
                    ("__asan_exp_loadN" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9350 9360])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9361 9371])
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9372 9380]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9328 9526])
                    ("__asan_loadN_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9594 9604])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9605 9615]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9568 9760])
                    ("__asan_storeN" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9821 9831])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9832 9842]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [9802 9985])
                    ("__asan_exp_storeN" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10050 10060])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10061 10071])
                            ("exp" variable (:type ("u32" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10072 10080]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [10027 10225])
                    ("__asan_storeN_noabort" function
                       (:arguments 
                          ( ("addr" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10294 10304])
                            ("size" variable (:type ("uptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10305 10315]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [10267 10459])
                    ("force_interface_symbols" function (:type "void") (reparse-symbol namespacesubparts) [10798 13334])
                    ("asan_atexit" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol namespacesubparts) [13336 13650])
                    ("InitializeHighMemEnd" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol namespacesubparts) [13652 14052])
                    ("PrintAddressSpaceLayout" function (:type "void") (reparse-symbol namespacesubparts) [14054 16258])
                    ("__local_asan_dyninit" variable
                       (:default-value "[] {
  MaybeStartBackgroudThread();
  SetSoftRssLimitExceededCallback(AsanSoftRssLimitExceededCallback);

  return false;
}()"
                        :type ("UNUSED" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [16423 16579])
                    ("AsanInitInternal" function
                       (:typemodifiers ("static")
                        :type "void")
                        (reparse-symbol namespacesubparts) [16588 20552])
                    ("AsanInitFromRtl" function (:type "void") (reparse-symbol namespacesubparts) [20655 20703]))                  
                :type "namespace")
                nil [1421 21031])
            ("__asan" using (:type ("__asan" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [21111 21134])
            ("__asan_handle_no_return" function (:type ("NOINLINE" type (:type "class") nil nil)) nil [21141 22554])
            ("__asan_extra_spill_area" function
               (:pointer 1
                :type "void")
                nil [22567 22684])
            ("__asan_handle_vfork" function
               (:arguments 
                  ( ("sp" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [22711 22720]))                  
                :type "void")
                nil [22686 22855])
            ("__asan_set_death_callback" function
               (:arguments 
                  ( ("callback" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [22914 22919]))                          
                        :type "void")
                        nil nil))                  
                :type ("NOINLINE" type (:type "class") nil nil))
                nil [22862 22956])
            ("__asan_init" function (:type "void") nil [23094 23156])
            ("__asan_version_mismatch_check" function (:type "void") nil [23158 23215]))          
      :file "asan_rtl.cpp"
      :pointmax 23216
      :fsize 23215
      :lastmodtime '(24391 26988 895292 274000)
      :unmatched-syntax '((VOID 22857 . 22861) (VOID 21136 . 21140) (BOOL 16418 . 16422) (STATIC 16411 . 16417) (symbol 10789 . 10797) (STATIC 10782 . 10788) (symbol 10247 . 10266) (symbol 10238 . 10246) (string 10234 . 10237) (EXTERN 10227 . 10233) (symbol 10007 . 10026) (symbol 9998 . 10006) (string 9994 . 9997) (EXTERN 9987 . 9993) (symbol 9782 . 9801) (symbol 9773 . 9781) (string 9769 . 9772) (EXTERN 9762 . 9768) (symbol 9548 . 9567) (symbol 9539 . 9547) (string 9535 . 9538) (EXTERN 9528 . 9534) (symbol 9308 . 9327) (symbol 9299 . 9307) (string 9295 . 9298) (EXTERN 9288 . 9294) (symbol 9083 . 9102) (symbol 9074 . 9082) (string 9070 . 9073) (EXTERN 9063 . 9069) (symbol "INTERFACE_ATTRIBUTE" 9017 . 9061) (symbol "NOINLINE" 9017 . 9061) (string "\"C\"" 9017 . 9061) (EXTERN "extern" 9017 . 9061) (symbol "INTERFACE_ATTRIBUTE" 9017 . 9061) (symbol "NOINLINE" 9017 . 9061) (string "\"C\"" 9017 . 9061) (EXTERN "extern" 9017 . 9061) (symbol "INTERFACE_ATTRIBUTE" 9017 . 9061) (symbol "NOINLINE" 9017 . 9061) (string "\"C\"" 9017 . 9061) (EXTERN "extern" 9017 . 9061) (symbol "INTERFACE_ATTRIBUTE" 8973 . 9016) (symbol "NOINLINE" 8973 . 9016) (string "\"C\"" 8973 . 9016) (EXTERN "extern" 8973 . 9016) (symbol "INTERFACE_ATTRIBUTE" 8973 . 9016) (symbol "NOINLINE" 8973 . 9016) (string "\"C\"" 8973 . 9016) (EXTERN "extern" 8973 . 9016) (symbol "INTERFACE_ATTRIBUTE" 8973 . 9016) (symbol "NOINLINE" 8973 . 9016) (string "\"C\"" 8973 . 9016) (EXTERN "extern" 8973 . 9016) (symbol "INTERFACE_ATTRIBUTE" 8929 . 8972) (symbol "NOINLINE" 8929 . 8972) (string "\"C\"" 8929 . 8972) (EXTERN "extern" 8929 . 8972) (symbol "INTERFACE_ATTRIBUTE" 8929 . 8972) (symbol "NOINLINE" 8929 . 8972) (string "\"C\"" 8929 . 8972) (EXTERN "extern" 8929 . 8972) (symbol "INTERFACE_ATTRIBUTE" 8929 . 8972) (symbol "NOINLINE" 8929 . 8972) (string "\"C\"" 8929 . 8972) (EXTERN "extern" 8929 . 8972) (symbol "INTERFACE_ATTRIBUTE" 8885 . 8928) (symbol "NOINLINE" 8885 . 8928) (string "\"C\"" 8885 . 8928) (EXTERN "extern" 8885 . 8928) (symbol "INTERFACE_ATTRIBUTE" 8885 . 8928) (symbol "NOINLINE" 8885 . 8928) (string "\"C\"" 8885 . 8928) (EXTERN "extern" 8885 . 8928) (symbol "INTERFACE_ATTRIBUTE" 8885 . 8928) (symbol "NOINLINE" 8885 . 8928) (string "\"C\"" 8885 . 8928) (EXTERN "extern" 8885 . 8928) (symbol "INTERFACE_ATTRIBUTE" 8841 . 8884) (symbol "NOINLINE" 8841 . 8884) (string "\"C\"" 8841 . 8884) (EXTERN "extern" 8841 . 8884) (symbol "INTERFACE_ATTRIBUTE" 8841 . 8884) (symbol "NOINLINE" 8841 . 8884) (string "\"C\"" 8841 . 8884) (EXTERN "extern" 8841 . 8884) (symbol "INTERFACE_ATTRIBUTE" 8841 . 8884) (symbol "NOINLINE" 8841 . 8884) (string "\"C\"" 8841 . 8884) (EXTERN "extern" 8841 . 8884) (symbol "INTERFACE_ATTRIBUTE" 8796 . 8840) (symbol "NOINLINE" 8796 . 8840) (string "\"C\"" 8796 . 8840) (EXTERN "extern" 8796 . 8840) (symbol "INTERFACE_ATTRIBUTE" 8796 . 8840) (symbol "NOINLINE" 8796 . 8840) (string "\"C\"" 8796 . 8840) (EXTERN "extern" 8796 . 8840) (symbol "INTERFACE_ATTRIBUTE" 8796 . 8840) (symbol "NOINLINE" 8796 . 8840) (string "\"C\"" 8796 . 8840) (EXTERN "extern" 8796 . 8840) (symbol "INTERFACE_ATTRIBUTE" 8752 . 8795) (symbol "NOINLINE" 8752 . 8795) (string "\"C\"" 8752 . 8795) (EXTERN "extern" 8752 . 8795) (symbol "INTERFACE_ATTRIBUTE" 8752 . 8795) (symbol "NOINLINE" 8752 . 8795) (string "\"C\"" 8752 . 8795) (EXTERN "extern" 8752 . 8795) (symbol "INTERFACE_ATTRIBUTE" 8752 . 8795) (symbol "NOINLINE" 8752 . 8795) (string "\"C\"" 8752 . 8795) (EXTERN "extern" 8752 . 8795) (symbol "INTERFACE_ATTRIBUTE" 8708 . 8751) (symbol "NOINLINE" 8708 . 8751) (string "\"C\"" 8708 . 8751) (EXTERN "extern" 8708 . 8751) (symbol "INTERFACE_ATTRIBUTE" 8708 . 8751) (symbol "NOINLINE" 8708 . 8751) (string "\"C\"" 8708 . 8751) (EXTERN "extern" 8708 . 8751) (symbol "INTERFACE_ATTRIBUTE" 8708 . 8751) (symbol "NOINLINE" 8708 . 8751) (string "\"C\"" 8708 . 8751) (EXTERN "extern" 8708 . 8751) (symbol "INTERFACE_ATTRIBUTE" 8664 . 8707) (symbol "NOINLINE" 8664 . 8707) (string "\"C\"" 8664 . 8707) (EXTERN "extern" 8664 . 8707) (symbol "INTERFACE_ATTRIBUTE" 8664 . 8707) (symbol "NOINLINE" 8664 . 8707) (string "\"C\"" 8664 . 8707) (EXTERN "extern" 8664 . 8707) (symbol "INTERFACE_ATTRIBUTE" 8664 . 8707) (symbol "NOINLINE" 8664 . 8707) (string "\"C\"" 8664 . 8707) (EXTERN "extern" 8664 . 8707) (symbol "INTERFACE_ATTRIBUTE" 8620 . 8663) (symbol "NOINLINE" 8620 . 8663) (string "\"C\"" 8620 . 8663) (EXTERN "extern" 8620 . 8663) (symbol "INTERFACE_ATTRIBUTE" 8620 . 8663) (symbol "NOINLINE" 8620 . 8663) (string "\"C\"" 8620 . 8663) (EXTERN "extern" 8620 . 8663) (symbol "INTERFACE_ATTRIBUTE" 8620 . 8663) (symbol "NOINLINE" 8620 . 8663) (string "\"C\"" 8620 . 8663) (EXTERN "extern" 8620 . 8663) (symbol "INTERFACE_ATTRIBUTE" 6067 . 6099) (symbol "NOINLINE" 6067 . 6099) (string "\"C\"" 6067 . 6099) (EXTERN "extern" 6067 . 6099) (symbol "INTERFACE_ATTRIBUTE" 6067 . 6099) (symbol "NOINLINE" 6067 . 6099) (string "\"C\"" 6067 . 6099) (EXTERN "extern" 6067 . 6099) (symbol "INTERFACE_ATTRIBUTE" 6067 . 6099) (symbol "NOINLINE" 6067 . 6099) (string "\"C\"" 6067 . 6099) (EXTERN "extern" 6067 . 6099) (symbol "INTERFACE_ATTRIBUTE" 6034 . 6066) (symbol "NOINLINE" 6034 . 6066) (string "\"C\"" 6034 . 6066) (EXTERN "extern" 6034 . 6066) (symbol "INTERFACE_ATTRIBUTE" 6034 . 6066) (symbol "NOINLINE" 6034 . 6066) (string "\"C\"" 6034 . 6066) (EXTERN "extern" 6034 . 6066) (symbol "INTERFACE_ATTRIBUTE" 6034 . 6066) (symbol "NOINLINE" 6034 . 6066) (string "\"C\"" 6034 . 6066) (EXTERN "extern" 6034 . 6066) (symbol "INTERFACE_ATTRIBUTE" 4749 . 4783) (symbol "NOINLINE" 4749 . 4783) (string "\"C\"" 4749 . 4783) (EXTERN "extern" 4749 . 4783) (symbol "INTERFACE_ATTRIBUTE" 4749 . 4783) (symbol "NOINLINE" 4749 . 4783) (string "\"C\"" 4749 . 4783) (EXTERN "extern" 4749 . 4783) (symbol "INTERFACE_ATTRIBUTE" 4749 . 4783) (symbol "NOINLINE" 4749 . 4783) (string "\"C\"" 4749 . 4783) (EXTERN "extern" 4749 . 4783) (symbol "INTERFACE_ATTRIBUTE" 4715 . 4748) (symbol "NOINLINE" 4715 . 4748) (string "\"C\"" 4715 . 4748) (EXTERN "extern" 4715 . 4748) (symbol "INTERFACE_ATTRIBUTE" 4715 . 4748) (symbol "NOINLINE" 4715 . 4748) (string "\"C\"" 4715 . 4748) (EXTERN "extern" 4715 . 4748) (symbol "INTERFACE_ATTRIBUTE" 4715 . 4748) (symbol "NOINLINE" 4715 . 4748) (string "\"C\"" 4715 . 4748) (EXTERN "extern" 4715 . 4748) (symbol "INTERFACE_ATTRIBUTE" 4681 . 4714) (symbol "NOINLINE" 4681 . 4714) (string "\"C\"" 4681 . 4714) (EXTERN "extern" 4681 . 4714) (symbol "INTERFACE_ATTRIBUTE" 4681 . 4714) (symbol "NOINLINE" 4681 . 4714) (string "\"C\"" 4681 . 4714) (EXTERN "extern" 4681 . 4714) (symbol "INTERFACE_ATTRIBUTE" 4681 . 4714) (symbol "NOINLINE" 4681 . 4714) (string "\"C\"" 4681 . 4714) (EXTERN "extern" 4681 . 4714) (symbol "INTERFACE_ATTRIBUTE" 4647 . 4680) (symbol "NOINLINE" 4647 . 4680) (string "\"C\"" 4647 . 4680) (EXTERN "extern" 4647 . 4680) (symbol "INTERFACE_ATTRIBUTE" 4647 . 4680) (symbol "NOINLINE" 4647 . 4680) (string "\"C\"" 4647 . 4680) (EXTERN "extern" 4647 . 4680) (symbol "INTERFACE_ATTRIBUTE" 4647 . 4680) (symbol "NOINLINE" 4647 . 4680) (string "\"C\"" 4647 . 4680) (EXTERN "extern" 4647 . 4680) (symbol "INTERFACE_ATTRIBUTE" 4613 . 4646) (symbol "NOINLINE" 4613 . 4646) (string "\"C\"" 4613 . 4646) (EXTERN "extern" 4613 . 4646) (symbol "INTERFACE_ATTRIBUTE" 4613 . 4646) (symbol "NOINLINE" 4613 . 4646) (string "\"C\"" 4613 . 4646) (EXTERN "extern" 4613 . 4646) (symbol "INTERFACE_ATTRIBUTE" 4613 . 4646) (symbol "NOINLINE" 4613 . 4646) (string "\"C\"" 4613 . 4646) (EXTERN "extern" 4613 . 4646) (symbol "INTERFACE_ATTRIBUTE" 4578 . 4612) (symbol "NOINLINE" 4578 . 4612) (string "\"C\"" 4578 . 4612) (EXTERN "extern" 4578 . 4612) (symbol "INTERFACE_ATTRIBUTE" 4578 . 4612) (symbol "NOINLINE" 4578 . 4612) (string "\"C\"" 4578 . 4612) (EXTERN "extern" 4578 . 4612) (symbol "INTERFACE_ATTRIBUTE" 4578 . 4612) (symbol "NOINLINE" 4578 . 4612) (string "\"C\"" 4578 . 4612) (EXTERN "extern" 4578 . 4612) (symbol "INTERFACE_ATTRIBUTE" 4544 . 4577) (symbol "NOINLINE" 4544 . 4577) (string "\"C\"" 4544 . 4577) (EXTERN "extern" 4544 . 4577) (symbol "INTERFACE_ATTRIBUTE" 4544 . 4577) (symbol "NOINLINE" 4544 . 4577) (string "\"C\"" 4544 . 4577) (EXTERN "extern" 4544 . 4577) (symbol "INTERFACE_ATTRIBUTE" 4544 . 4577) (symbol "NOINLINE" 4544 . 4577) (string "\"C\"" 4544 . 4577) (EXTERN "extern" 4544 . 4577) (symbol "INTERFACE_ATTRIBUTE" 4510 . 4543) (symbol "NOINLINE" 4510 . 4543) (string "\"C\"" 4510 . 4543) (EXTERN "extern" 4510 . 4543) (symbol "INTERFACE_ATTRIBUTE" 4510 . 4543) (symbol "NOINLINE" 4510 . 4543) (string "\"C\"" 4510 . 4543) (EXTERN "extern" 4510 . 4543) (symbol "INTERFACE_ATTRIBUTE" 4510 . 4543) (symbol "NOINLINE" 4510 . 4543) (string "\"C\"" 4510 . 4543) (EXTERN "extern" 4510 . 4543) (symbol "INTERFACE_ATTRIBUTE" 4476 . 4509) (symbol "NOINLINE" 4476 . 4509) (string "\"C\"" 4476 . 4509) (EXTERN "extern" 4476 . 4509) (symbol "INTERFACE_ATTRIBUTE" 4476 . 4509) (symbol "NOINLINE" 4476 . 4509) (string "\"C\"" 4476 . 4509) (EXTERN "extern" 4476 . 4509) (symbol "INTERFACE_ATTRIBUTE" 4476 . 4509) (symbol "NOINLINE" 4476 . 4509) (string "\"C\"" 4476 . 4509) (EXTERN "extern" 4476 . 4509) (symbol "INTERFACE_ATTRIBUTE" 4442 . 4475) (symbol "NOINLINE" 4442 . 4475) (string "\"C\"" 4442 . 4475) (EXTERN "extern" 4442 . 4475) (symbol "INTERFACE_ATTRIBUTE" 4442 . 4475) (symbol "NOINLINE" 4442 . 4475) (string "\"C\"" 4442 . 4475) (EXTERN "extern" 4442 . 4475) (symbol "INTERFACE_ATTRIBUTE" 4442 . 4475) (symbol "NOINLINE" 4442 . 4475) (string "\"C\"" 4442 . 4475) (EXTERN "extern" 4442 . 4475))
      :lexical-table 
        '(("ASAN_REPORT_ERROR" (spp-arg-list ("type" "is_write" "size") 3346 . 3368) . 
              ((EXTERN "extern" 3391 . 3397) (string "\"C\"" 3398 . 3401) (symbol "NOINLINE" 3402 . 3410) (symbol "INTERFACE_ATTRIBUTE" 3411 . 3430) (VOID "void" 3461 . 3465) (spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_report_" 3466 . 3480) (symbol "type" 3484 . 3488)) 3466 . 3488) (symbol "size" 3492 . 3496)) 3466 . 3496) (semantic-list "(uptr addr)" 3496 . 3507) (semantic-list "{                    \\
  GET_CALLER_PC_BP_SP;                                              \\
  ReportGenericError(pc, bp, sp, addr, is_write, size, 0, true);    \\
}" 3508 . 3672) (EXTERN "extern" 3741 . 3747) (string "\"C\"" 3748 . 3751) (symbol "NOINLINE" 3752 . 3760) (symbol "INTERFACE_ATTRIBUTE" 3761 . 3780) (VOID "void" 3811 . 3815) (spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_report_exp_" 3816 . 3834) (symbol "type" 3838 . 3842)) 3816 . 3842) (symbol "size" 3846 . 3850)) 3816 . 3850) (semantic-list "(uptr addr, u32 exp)" 3850 . 3870) (semantic-list "{       \\
  GET_CALLER_PC_BP_SP;                                              \\
  ReportGenericError(pc, bp, sp, addr, is_write, size, exp, true);  \\
}" 3871 . 4022) (EXTERN "extern" 4091 . 4097) (string "\"C\"" 4098 . 4101) (symbol "NOINLINE" 4102 . 4110) (symbol "INTERFACE_ATTRIBUTE" 4111 . 4130) (VOID "void" 4161 . 4165) (spp-symbol-merge ((spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_report_" 4166 . 4180) (symbol "type" 4184 . 4188)) 4166 . 4188) (symbol "size" 4192 . 4196)) 4166 . 4196) (symbol "_noabort" 4200 . 4208)) 4166 . 4208) (semantic-list "(uptr addr)" 4208 . 4219) (semantic-list "{        \\
  GET_CALLER_PC_BP_SP;                                              \\
  ReportGenericError(pc, bp, sp, addr, is_write, size, 0, false);   \\
}" 4220 . 4372)))
          ("ASAN_REPORT_ERROR_N" (spp-arg-list ("type" "is_write") 4812 . 4828) . 
              ((EXTERN "extern" 4863 . 4869) (string "\"C\"" 4870 . 4873) (symbol "NOINLINE" 4874 . 4882) (symbol "INTERFACE_ATTRIBUTE" 4883 . 4902) (VOID "void" 4941 . 4945) (spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_report_" 4946 . 4960) (symbol "type" 4964 . 4968)) 4946 . 4968) (symbol "_n" 4972 . 4974)) 4946 . 4974) (semantic-list "(uptr addr, uptr size)" 4974 . 4996) (semantic-list "{                   \\
  GET_CALLER_PC_BP_SP;                                                      \\
  ReportGenericError(pc, bp, sp, addr, is_write, size, 0, true);            \\
}" 4997 . 5176) (EXTERN "extern" 5253 . 5259) (string "\"C\"" 5260 . 5263) (symbol "NOINLINE" 5264 . 5272) (symbol "INTERFACE_ATTRIBUTE" 5273 . 5292) (VOID "void" 5331 . 5335) (spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_report_exp_" 5336 . 5354) (symbol "type" 5358 . 5362)) 5336 . 5362) (symbol "_n" 5366 . 5368)) 5336 . 5368) (semantic-list "(uptr addr, uptr size, u32 exp)" 5368 . 5399) (semantic-list "{      \\
  GET_CALLER_PC_BP_SP;                                                      \\
  ReportGenericError(pc, bp, sp, addr, is_write, size, exp, true);          \\
}" 5400 . 5566) (EXTERN "extern" 5643 . 5649) (string "\"C\"" 5650 . 5653) (symbol "NOINLINE" 5654 . 5662) (symbol "INTERFACE_ATTRIBUTE" 5663 . 5682) (VOID "void" 5721 . 5725) (spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_report_" 5726 . 5740) (symbol "type" 5744 . 5748)) 5726 . 5748) (symbol "_n_noabort" 5752 . 5762)) 5726 . 5762) (semantic-list "(uptr addr, uptr size)" 5762 . 5784) (semantic-list "{           \\
  GET_CALLER_PC_BP_SP;                                                      \\
  ReportGenericError(pc, bp, sp, addr, is_write, size, 0, false);           \\
}" 5785 . 5956)))
          ("ASAN_MEMORY_ACCESS_CALLBACK" (spp-arg-list ("type" "is_write" "size") 7601 . 7623) . 
              ((EXTERN "extern" 7649 . 7655) (string "\"C\"" 7656 . 7659) (symbol "NOINLINE" 7660 . 7668) (symbol "INTERFACE_ATTRIBUTE" 7669 . 7688) (VOID "void" 7730 . 7734) (spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_" 7735 . 7742) (symbol "type" 7744 . 7748)) 7735 . 7748) (symbol "size" 7750 . 7754)) 7735 . 7754) (semantic-list "(uptr addr)" 7754 . 7765) (semantic-list "{                                        \\
    ASAN_MEMORY_ACCESS_CALLBACK_BODY(type, is_write, size, 0, true)            \\
  }" 7766 . 7893) (EXTERN "extern" 7973 . 7979) (string "\"C\"" 7980 . 7983) (symbol "NOINLINE" 7984 . 7992) (symbol "INTERFACE_ATTRIBUTE" 7993 . 8012) (VOID "void" 8054 . 8058) (spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_exp_" 8059 . 8070) (symbol "type" 8072 . 8076)) 8059 . 8076) (symbol "size" 8078 . 8082)) 8059 . 8082) (semantic-list "(uptr addr, u32 exp)" 8082 . 8102) (semantic-list "{                           \\
    ASAN_MEMORY_ACCESS_CALLBACK_BODY(type, is_write, size, exp, true)          \\
  }" 8103 . 8217) (EXTERN "extern" 8297 . 8303) (string "\"C\"" 8304 . 8307) (symbol "NOINLINE" 8308 . 8316) (symbol "INTERFACE_ATTRIBUTE" 8317 . 8336) (VOID "void" 8378 . 8382) (spp-symbol-merge ((spp-symbol-merge ((spp-symbol-merge ((symbol "__asan_" 8383 . 8390) (symbol "type" 8392 . 8396)) 8383 . 8396) (symbol "size" 8398 . 8402)) 8383 . 8402) (symbol "_noabort" 8406 . 8414)) 8383 . 8414) (semantic-list "(uptr addr)" 8414 . 8425) (semantic-list "{                            \\
    ASAN_MEMORY_ACCESS_CALLBACK_BODY(type, is_write, size, 0, false)           \\
  }" 8426 . 8541)))
          ("ASAN_MEMORY_ACCESS_CALLBACK_BODY" (spp-arg-list ("type" "is_write" "size" "exp_arg" "fatal") 6141 . 6179) . 
              ((IF "if" 6186 . 6188) (semantic-list "(SANITIZER_MYRIAD2 && !AddrIsInMem(addr) && !AddrIsInShadow(addr))" 6189 . 6255) (RETURN "return" 6269 . 6275) (punctuation ";" 6275 . 6276) (symbol "uptr" 6348 . 6352) (symbol "sp" 6353 . 6355) (punctuation "=" 6356 . 6357) (symbol "MEM_TO_SHADOW" 6358 . 6371) (semantic-list "(addr)" 6371 . 6377) (punctuation ";" 6377 . 6378) (symbol "uptr" 6429 . 6433) (symbol "s" 6434 . 6435) (punctuation "=" 6436 . 6437) (symbol "size" 6438 . 6442) (punctuation "<" 6443 . 6444) (punctuation "=" 6444 . 6445) (symbol "SHADOW_GRANULARITY" 6446 . 6464) (punctuation "?" 6465 . 6466) (punctuation "*" 6467 . 6468) (symbol "reinterpret_cast" 6468 . 6484) (punctuation "<" 6484 . 6485) (symbol "u8" 6485 . 6487) (punctuation "*" 6488 . 6489) (punctuation ">" 6489 . 6490) (semantic-list "(sp)" 6490 . 6494) (punctuation ":" 6546 . 6547) (punctuation "*" 6548 . 6549) (symbol "reinterpret_cast" 6549 . 6565) (punctuation "<" 6565 . 6566) (symbol "u16" 6566 . 6569) (punctuation "*" 6570 . 6571) (punctuation ">" 6571 . 6572) (semantic-list "(sp)" 6572 . 6576) (punctuation ";" 6576 . 6577) (IF "if" 6591 . 6593) (semantic-list "(UNLIKELY(s))" 6594 . 6607) (semantic-list "{                                                         \\
      if (UNLIKELY(size >= SHADOW_GRANULARITY ||                               \\
                   ((s8)((addr & (SHADOW_GRANULARITY - 1)) + size - 1)) >=     \\
                       (s8)s)) {                                               \\
        if (__asan_test_only_reported_buggy_pointer) {                         \\
          *__asan_test_only_reported_buggy_pointer = addr;                     \\
        } else {                                                               \\
          GET_CALLER_PC_BP_SP;                                                 \\
          ReportGenericError(pc, bp, sp, addr, is_write, size, exp_arg,        \\
                              fatal);                                          \\
        }                                                                      \\
      }                                                                        \\
    }" 6608 . 7564)))
          )
)
    (semanticdb-table "semanticdb-table-1585eb6771f2"
      :file "asan_stats.h"
      :fsize 2100
      :lastmodtime '(24391 25612 223943 495000))
    (semanticdb-table "semanticdb-table-1585eb677212"
      :file "asan_suppressions.h"
      :fsize 1032
      :lastmodtime '(24391 25612 223943 495000)))
  :file "!home!khadinh!gits!llvm-project!compiler-rt!lib!asan!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
